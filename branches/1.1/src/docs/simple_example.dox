/*!

\page simple_example An Example of Using API

The following example shows how to use crInstall() and
crUninstall() functions to enable crash reporting support 
in your application. This example assumes you already configured
your project as described in \ref configuring_project

\code

#include "CrashRpt.h"
#include <tchar.h>
#include <assert.h> // Using assert()
#include <string>   // Using std::string

// Define character set independent strings
typedef std::basic_string<TCHAR> tstring; 

tstring GetAppDataDir()
{
  // Here GetAppDataDir() is a placeholder for your function that returns path to
  // the directory where application data are stored

}

// Define the crash callback
BOOL WINAPI CrashCallback(LPVOID /*lpvState*/)
{
  // dummy.log is an example of a file containing application log
  tstring sLogFile = GetAppDataDir() + _T("\\dummy.log");

  // dummy.ini is an example of a file containing application settings  
  tstring sIniFile = GetAppDataDir() + _T("\\dummy.ini");

  // Now add these two files to the error report
  crAddFile(sLogFile.c_str(), _T("Dummy Log File"));  
  crAddFile(sIniFile.c_str(), _T("Dummy INI File"));

  // Return TRUE to allow crash report generation
  return TRUE;
}

void install_crashrpt()
{
  // Install CrashRpt support
 
  CR_INSTALL_INFO info;
  memset(&info, 0, sizeof(CR_INSTALL_INFO));
  info.cb = sizeof(CR_INSTALL_INFO);  
  info.pszAppName = _T("My Application");
  info.pszAppVersion = _T("1.3.5");
  info.pszEmailSubject = _T("Error Report from My Application 1.3.5");
  info.pszEmailTo = _T("myapp_support@hotmail.com");  
  info.pszUrl = _T("http://myapp.com/tools/crashrpt.php");
  info.pfnCrashCallback = CrashCallback; 
  info.uPriorities[CR_HTTP] = 3;  // Try HTTP the first
  info.uPriorities[CR_SMTP] = 2;  // Try SMTP the second
  info.uPriorities[CR_SMAPI] = 1; // Try Simple MAPI the last  
  info.dwFlags = 0; // Install all available exception handlers
  info.pszPrivacyPolicyURL = _T("http://myapp.com/privacypolicy.html"); // URL for the Privacy Policy link
  
  int nInstResult = crInstall(&info);
  if(nInstResult!=0)
  {
    // Something goes wrong!
    TCHAR szErrorMsg[512];
    szErrorMsg[0]=0;

    crGetLastErrorMsg(szErrorMsg, 512);
    _tprintf(_T("%s\n"), szErrorMsg);

    assert(nInstResult==0);
  }
}

void uninstall_crashrpt()
{
  // Unset crash handlers
  int nUninstResult = crUninstall();
  assert(nUninstResult==0);
}

void main()
{
  install_crashrpt();

  //
  // .. your code follows here ..
  //


  uninstall_crashrpt();

  return;
}

\endcode

*/
