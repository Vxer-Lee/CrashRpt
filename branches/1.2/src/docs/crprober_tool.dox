/*!

\page crprober_tool Using crprober.exe Tool

<b>Since v1.2.0</b>, CrashRpt provides a tool named <b>crprober.exe</b> that
can be used for automating crash report processing. To run the tool, go to 
\c bin directory and type <b>crprober.exe</b> in the command line.

Note that crprober.exe shouldn't be distributed to end users. They just won't be able
to use it.

The tool can be used to open error report files generated by any version of CrashRpt.
However it works the best with reports created by version 1.1 and
higher. 

Typically an error report file contains an associated MD5 hash file. The crprober tool
can perform integrity check using the MD5 hash file. When you receive a report
using HTTP connection, the MD5 hash can be retreived from 'md5' script argument. When you
receive a report using E-mail, the hash is attached to the mail message. For more information,
see \ref sending_error_reports.

The tool extracts information about the error report (its GUID, version of CrashRpt that
generated the report, creation time in UTC format), the information about the application 
that sent the report (name, version, path to executable file, the list of loaded modules), 
information about the operating system (name, version, service pack, CPU info), and 
information about the exception (exception address, exception code, stack trace). It presents
the extracted information in text form (creates a text file or writes to the terminal).

The error report can't be processed properly without symbol files (*.PDB) generated by Visual Studio for your 
application. You typically store the symbol files locally when preparing to software release.
For more information, see \ref preparing_to_software_release.

The \b crprober.exe is a console tool. It accepts several command line arguments. The
arguments are listed in the table below:

<table>
<tr>
<td> \b Name
<td> \b Description
<tr>
<td>/f \<in_file_pattern\>     
<td>Input ZIP file or search pattern. Required.
<tr>
<td>/fmd5 \<md5_file\>         
<td>Name of .md5 file containing MD5 hash for ZIP archive.
<tr>
<td>/o \<out_file_or_dir\>     
<td>Output file name or directory. If this parameter is ommitted, output is written to the terminal.
<tr>
<td>/sym \<sym_search_dirs\>   
<td>Symbol file search directory or list of directories separated with semicolon. If this parameter 
is ommitted, symbols files are searched using the deafult search sequence.
</table>

\section crprober_examples Examples

The following example processes the 'error_report.zip' file and writes output to the terminal. Symbol files are
assumed to be located in 'D:\\Symbol Files' directory.
\code
crprober.exe /f error_report.zip /sym "D:\Symbol Files"
\endcode

The following example opens 'error_report.zip' file located in the current directory, 
performs integrity check using 'error_report.zip.md5' file and writes output to the 'error_report.zip.txt' file.
Symbol files are assumed to be located in 'D:\\Symbol Files' or in 'D:\\MyApp\\sym' directory.
\code
crprober.exe /f error_report.zip /md5 'error_report.zip.md5' /o error_report.zip.txt /sym "D:\Symbol Files;D:\MyApp\sym"
\endcode


The following example opens all ZIP archives in the specified directory, processes them and creates
the resulting text files in the 'D:\\Error Reports' directory:
\code
crprober.exe /f *.zip /o "D:\Error Reports"
\endcode


*/