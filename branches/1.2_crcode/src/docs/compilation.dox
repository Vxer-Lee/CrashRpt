/*!

\page compiling_crashrpt Compiling CrashRpt

By default CrashRpt release package already contains binary files 
compiled with Visual Studio 2005 in its \c bin directory. However, 
it is strongly recommended that you compile CrashRpt yourself using 
your version of Visual Studio. This is needed to ensure CrashRpt 
uses the same version of C run-time libraries (CRT) as your 
application does.

\section wtl Downloading WTL

CrashRpt depends on WTL library (Windows Template Library).
Download the latest version of WTL from 
<a href="http://sourceforge.net/projects/wtl">here</a>.
Unzip the WTL archive to some folder. In Visual Studio, open Tools->
Options->Projects and Solutions->VC++ Directories.
In the 'Show directories for' combo select 'Include files', then add 
the path to <i>WTL\\include</i> directory to the list of include directories.

\section building_solution Building Solution

You can compile CrashRpt in <b>Visual C++ .NET 2003</b>, <b>Visual C++ 2005</b>, 
<b>Visual C++ 2008</b> and <b>Visual C++ Express</b>.

Open one of solution files available in the top level directory of 
CrashRpt package, depending on your version of Visual Studio:
 - <b>CrashRpt_vs.NET.sln</b> if you use Visual C++ .NET 2003 
 - <b>CrashRpt_vs2005.sln</b> if you use Visual C++ 2005 or Visual C++ 2005 Express 
 - <b>CrashRpt_vs2008.sln</b> if you use Visual C++ 2008 or Visual C++ 2008 Express 

There are several projects in CrashRpt solution.

- \b CrashRpt project contains 
  API implementation and provides functionality for intercepting exceptions
  and generating error reports.

- \b CrashSender project contains functionality 
  for displaying GUI, sending the error report and showing error report sending progress.

- \b CrashRptTest is a GUI application that helps to check that 
   CrashRpt API functions work as expected.

- \b crashcon is a console application that helps to test how CrashRpt
  works with console applications.

- \b zlib project contains file compression functionality.

- \b CrashRptProbe project contains functionality for processing error reports.

- \b crprober.exe is a console tool for error reports processing.

To build solution, choose the Release build configuration and press 
F7 to start building process.

\section notes_about_evc Notes About Compiling in Visual C++ Express

To compile CrashRpt in Visual C++ Express, you need to have Platform SDK for 
Windows Server 2003, because this Platform SDK contains ATL source code. 
Download and install Microsoft Platform SDK for Windows Server 2003, for example
<a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=A55B6B43-E24F-4EA3-A93E-40C0EC4F68E5&displaylang=en">
from here</a>.

In VC++ Express window, open Tools->Options...->Projects and Solutions->
VC++ Directories. In the 'Show directories for' combo, select 'Include files' 
and then add <i>[Platform_SDK_Folder]\\Include\\atl</i> path to the list of include 
directories.

<b>For more information.</b> CrashRpt depends on WTL. WTL itself depends on Microsoft's library called ATL (Active Template Library). 
ATL library is a part of Visual Studio SDKs. The latest version at the moment 
is ATL 8.0. An older version, ATL 3.0 is also included into Microsoft Platform 
SDK for Windows Server 2003. Since then, Platform SDK was renamed into Windows 
SDK and the latest version (at the moment) of Windows SDK is v6.0. However, 
Microsoft didn't include ATL into Windows SDK v6.0 to encourage using of 
commercial Visual Studio having ATL. The dependency on ATL introduces a lot of 
problems for WTL, so in the future WTL developers might remove this dependency 
at all (if possible).


\section builddox Generating Project Documentation

By default project documentation is already generated and included into the CrashRpt release
package. To open the documentation, click \c index.html file in the top-level directrory of 
CrashRpt package.

You can also build documentation yourself. CrashRpt documentation can be 
generated using the Doxygen tool. You can download
the tool from <a href="http://www.stack.nl/~dimitri/doxygen/">here</a>. 

To build the documentation, go to the \c docs folder and type in the command line:

\code
doxygen doxyfile
\endcode

When doxygen finishes, go to the top level directory and open \c index.html.

*/