/*!

\page send_report Sending Error Report

When crash occurs, CrashRpt builds an error report and sends it to the software developers 
using one of the following way: 
 - via HTTP request to a server-side script
 - via SMTP connection to recipient's mailbox
 - via Simple MAPI programming interface (the user's default E-mail client application)

If one of these ways fails, CrashRpt tries others in turn. If all ones fail, CrashRpt saves
the error report to \%UnsentErrorReports\% folder. 

\section smapisend Sending Crash Report using Simple MAPI


\section smtpsend Sending Crash Report using SMTP connection


\section httpsend Sending Crash Report using HTTP request

Many software products have web sites on the Internet. Such web servers typically have some 
scripting engine enabled, for example PHP, Perl and so on. CrashRpt can establish an HTTP connection
to a server-side script and send the error report as a script parameter.

The crash report ZIP file data are converted to base64 encoding to replace all restricted characters with a set
of 64 predefined characters. The server-side script should base64-decode the ZIP file data.

The encoded data are passed to the script by POST as parameter named "crashrpt".

Below is an example server-side PHP script can receive a crash report and write it to a file.

\code
<?php

$fileroot = "/home/username/crash_repots/";


// Checks if field is correct
function checkOK($field)
{
  if (eregi("\r",$field) || eregi("\n",$field))
  {
    die("Invalid Input!"); 
  }
}

/*** Begin ***/

checkOK($_POST["crashrpt"]);

// Decode file data
$filedata = base64_decode( $_POST["crashrpt"] );

// Generate ZIP file name
$datetime = date(DATE_RFC822);
$filename = $fileroot.md5($filedata.$datetime).".zip";

// Write decoded data to file
$file = fopen($filename, "w");
if($file==FALSE)
  die("Couldn't create file $filename.");

fwrite($file, $filedata);
fclose($file);

exit(0);
?>
\endcode

*/